<?php


use Drupal\views\ViewExecutable;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;

/**
 * @file
 * Module file for Producer Operation Data Systems (PODS)
 */

/**
 * Implements hook_upate_N().
 */

 function cig_pods_csc_update_90020() {

  $storage = BaseFieldDefinition::create('entity_reference')
 
  ->setLabel(t('Favorites'))
  ->setDescription(t('Awards favorites field.'))
  ->setRevisionable(TRUE)
  ->setSetting('target_type', 'asset')
  ->setSetting('handler', 'default')
  ->setSetting('handler_settings', [
    'target_bundles' => ['csc_project' => 'csc_project'],
    'auto_create' => FALSE,
  ])

  ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('award_favorites', 'user', 'user', $storage);

}

/**
 * Implements hook_entity_base_field_info().
 */

function cig_pods_csc_entity_base_field_info(EntityTypeInterface $entity_type) {
  
  if ($entity_type->id() === 'user') {
    $fields = [];
    $fields['award_favorites'] = BaseFieldDefinition::create('entity_reference')
    ->setLabel(t('Favorites'))
    ->setDescription(t('Awards favorites field.'))
    ->setRevisionable(TRUE)
    ->setSetting('target_type', 'asset')
    ->setSetting('handler', 'default')
    ->setSetting('handler_settings', [
      'target_bundles' => ['csc_project' => 'csc_project'],
      'auto_create' => FALSE,
    ])
    ->setTranslatable(TRUE)
    ->setDisplayOptions('view', [
      'label' => 'hidden',
      'type' => 'author',
      'weight' => 0,
    ])
    ->setDisplayOptions('form', [
      'type' => 'entity_reference_autocomplete',
      'weight' => 5,
      'settings' => [
        'match_operator' => 'CONTAINS',
        'size' => '60',
        'autocomplete_type' => 'tags',
        'placeholder' => '',
      ],
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setRequired(FALSE)
    ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED);

    return $fields;
  }
}
